{"version":3,"sources":["utils/returnTime.ts","components/Button/Button.tsx","audio/sound.mp3","components/PomodoroApp/PomodoroApp.tsx","App.tsx","index.tsx"],"names":["segundo","Date","toLocaleTimeString","hour12","timeZone","minute","second","Button","disabled","value","onClick","style","borderColor","type","audioTag","Audio","audio","PomodoroApp","useState","setSeconds","work","setWork","rest","setRest","pause","setPause","timeWorked","setTimeWorked","pomodoroCycles","setPomodoroCycles","currentTask","setCurrentTask","timeRef","useRef","activeWork","current","classList","remove","add","activeRest","isBigRest","restTime","play","useEffect","pomodoroData","localStorage","getItem","data","JSON","parse","currentClass","timer","className","setItem","stringify","clearInterval","window","setInterval","prevSecond","ref","returnTime","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.986f0ed8.chunk.js","sourcesContent":["export default (segundo: number): string => {\n    if (segundo >= 3600) {\n        return new Date(segundo * 1000).toLocaleTimeString('pt-BR', {\n            hour12: false,\n            timeZone: 'GMT',\n        });\n    }\n\n    return new Date(segundo * 1000).toLocaleTimeString('pt-BR', {\n        minute: '2-digit',\n        second: '2-digit',\n        timeZone: 'GMT',\n    });\n};\n","interface IButton {\n    disabled: boolean;\n    value: string;\n    onClick: () => void;\n}\n\nexport default function Button({\n    disabled,\n    value,\n    onClick,\n}: IButton): JSX.Element {\n    return (\n        <button\n            style={\n                disabled\n                    ? { borderColor: '#ff4544' }\n                    : { borderColor: '#e7e7e7' }\n            }\n            disabled={disabled}\n            type=\"button\"\n            onClick={onClick}\n        >\n            {value}\n        </button>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/sound.630fbdee.mp3\";","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { useEffect, useRef, useState } from 'react';\nimport returnTime from '../../utils/returnTime';\nimport Button from '../Button/Button';\nimport './PomodoroApp.css';\nimport audio from '../../audio/sound.mp3';\n\ninterface IData {\n    second: number;\n    work: boolean;\n    rest: boolean;\n    timeWorked: number;\n    currentClass: string;\n    currentTask: string;\n    pomodoroCycles: number;\n}\n\nconst audioTag = new Audio(audio);\nconst workTime = 1500; // 25 min\nconst restTime = 300; // 5 min\n\nexport default function PomodoroApp(): JSX.Element {\n    const [second, setSeconds] = useState(workTime);\n    const [work, setWork] = useState(false);\n    const [rest, setRest] = useState(false);\n    const [pause, setPause] = useState(false);\n    const [timeWorked, setTimeWorked] = useState(0);\n    const [pomodoroCycles, setPomodoroCycles] = useState(0);\n    const [currentTask, setCurrentTask] = useState('doing nothing');\n    const timeRef = useRef<HTMLHeadingElement>(null);\n\n    const activeWork = () => {\n        setRest(false);\n        setWork(true);\n        setSeconds(workTime);\n        setCurrentTask('Work');\n\n        timeRef!.current!.classList.remove('rest');\n        timeRef!.current!.classList.add('work');\n    };\n\n    const activeRest = (isBigRest?: boolean) => {\n        setWork(false);\n        setRest(true);\n\n        if (isBigRest) {\n            setSeconds(restTime * 4);\n            audioTag.play();\n        } else {\n            setSeconds(restTime);\n        }\n\n        setCurrentTask('Rest');\n        setPomodoroCycles(pomodoroCycles + 1);\n\n        timeRef!.current!.classList.remove('work');\n        timeRef!.current!.classList.add('rest');\n    };\n\n    const handleClickWork = () => activeWork();\n\n    const handleClickRest = () => activeRest();\n\n    const handleClickPause = () => setPause(!pause);\n\n    useEffect(() => {\n        const pomodoroData = localStorage.getItem('pomodoroData');\n\n        if (pomodoroData) {\n            const data: IData = JSON.parse(pomodoroData);\n            setWork(data.work);\n            setRest(data.rest);\n            setPause(true);\n            setSeconds(data.second);\n            setTimeWorked(data.timeWorked);\n            setCurrentTask(data.currentTask);\n            setPomodoroCycles(data.pomodoroCycles);\n\n            if (data.currentClass) {\n                timeRef!.current!.classList.add(data.currentClass);\n            }\n        }\n    }, []);\n\n    useEffect(() => {\n        let timer = 0;\n\n        const conditional = pomodoroCycles !== 0 && pomodoroCycles % 4 === 0;\n\n        if (work && second === 0) activeRest(conditional);\n\n        if (rest && second === 0) activeWork();\n\n        const pomodoroData: IData = {\n            work,\n            rest,\n            second,\n            timeWorked,\n            currentTask,\n            pomodoroCycles,\n            currentClass: timeRef!.current!.className,\n        };\n\n        localStorage.setItem('pomodoroData', JSON.stringify(pomodoroData));\n\n        if ((work || rest) && !pause) {\n            timer = window.setInterval(() => {\n                setSeconds((prevSecond) => prevSecond - 1);\n                setTimeWorked((prevSecond) => prevSecond + 1);\n            }, 1000);\n        } else {\n            clearInterval(timer);\n        }\n\n        return () => clearInterval(timer);\n    }, [work, second, rest, pause, pomodoroCycles]);\n\n    return (\n        <main>\n            <section className=\"conteudo\">\n                <h1>You are: {currentTask}</h1>\n                <h1 ref={timeRef}>{returnTime(second)}</h1>\n                <h1>time worked: {returnTime(timeWorked)}</h1>\n                <h1>pomodoro cycles: {pomodoroCycles}</h1>\n                <div className=\"controls_container\">\n                    <Button\n                        disabled={pause}\n                        onClick={() => handleClickWork()}\n                        value=\"Work\"\n                    />\n                    <Button\n                        disabled={pause}\n                        onClick={() => handleClickRest()}\n                        value=\"Rest\"\n                    />\n                    <Button\n                        disabled={false}\n                        onClick={() => handleClickPause()}\n                        value={!pause ? 'Pause' : 'Continue'}\n                    />\n                </div>\n            </section>\n        </main>\n    );\n}\n","import PomodoroApp from './components/PomodoroApp/PomodoroApp';\n\nexport default function App(): JSX.Element {\n    return <PomodoroApp />;\n}\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './style/index.css';\n\nReactDOM.render(\n    <StrictMode>\n        <App />\n    </StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}